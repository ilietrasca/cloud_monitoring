
###########################
###  Cloud Monitoring   ###
###########################

version: "3.1"
services:
  prometheus:
    restart: always
    image: laurentiutra/prometheus:0.2
    container_name: prometheus
    healthcheck:
      test: 'nc -vz 127.0.0.1:9090'
      interval: 5s
      timeout: 10s
      retries: 3    
    environment:
      - '--web.max-connections=1024'
      - '--web.read-timeout=120s'
      - '--query.max-concurrency=256'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=14d'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:rw
      - ./prometheus/alert-rules.yml:/etc/prometheus/alert-rules.yml:rw
      - /home/ubuntu/prometheus:/prometheus:rw
    ports:
      - "9090:9090"
  grafana:
    image: laurentiutra/grafana:0.2
    container_name: grafana
    restart: always
    ports:
       - 3000:3000
    volumes:
      - ./grafana/provisioning/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:rw
      - ./grafana/provisioning/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:rw
      - ./grafana/dashboards/cloudmonitoring.json:/var/lib/grafana/cloudmonitoring.json:rw
  app:
    image: laurentiutra/cloudmonitoring:0.1
    container_name: app
    restart: always
    environment:
     - "URL=https://status.aws.amazon.com/"
    ports:
     - 8001:8001
    volumes:
     - ./src/app.py:/app.py:rw
  alertmanager:
    image: laurentiutra/last-alertmanager:0.1
    container_name: alertmanager
    restart: always
    ports:
       - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:rw  